{"version":3,"sources":["components/Navbar.js","components/Card.js","components/skeleton/CardSkeleton.js","pages/Home.js","components/Button.js","pages/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useContext","AppsContext","isDark","setIsDark","selectTheme","value","localStorage","setItem","html","document","querySelector","classList","add","getItem","remove","useEffect","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Card","img","title","population","region","capital","src","alt","Intl","NumberFormat","format","CardSkeleton","Home","useState","countryList","setCountryList","keyword","setKeyword","getAllData","fetch","then","data","json","catch","err","alert","onSubmit","e","preventDefault","status","console","log","type","placeholder","onChange","target","defaultValue","filter","disabled","map","el","idx","to","alpha2Code","flag","name","length","Primary","props","children","countryCode","useParams","country","setCountry","borderList","setBorderList","getBorderName","borders","res","push","nativeName","subregion","topLevelDomain","currencies","languages","createContext","App","basename","Provider","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a851b9f5.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AppsContext } from \"../App\";\r\n\r\nexport default function Navbar() {\r\n    const { isDark, setIsDark } = useContext(AppsContext);\r\n\r\n    const selectTheme = (value) => {\r\n        localStorage.setItem(\"theme\", value);\r\n        setIsDark(value === \"dark\" ? true : false);\r\n        const html = document.querySelector(\"html\");\r\n        html.classList.add(localStorage.getItem(\"theme\"));\r\n        if (value === \"dark\") {\r\n            html.classList.remove(\"light\");\r\n        } else {\r\n            html.classList.remove(\"dark\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document\r\n            .querySelector(\"html\")\r\n            .classList.add(localStorage.getItem(\"theme\"));\r\n        setIsDark(localStorage.getItem(\"theme\") === \"dark\" ? true : false);\r\n    }, [setIsDark]);\r\n\r\n    return (\r\n        <div\r\n            className={`py-6 shadow-2xl  ${\r\n                isDark\r\n                    ? \"bg-blue text-white \"\r\n                    : \"bg-white border-gray border-b-2 border-opacity-25\"\r\n            }`}\r\n        >\r\n            <div className=\"container flex justify-between\">\r\n                <div>\r\n                    <h1 className=\"font-bold text-xl\">Where in the world?</h1>\r\n                </div>\r\n                {isDark ? (\r\n                    <button\r\n                        className=\"text-yellow-500 flex items-center\"\r\n                        onClick={() => {\r\n                            selectTheme(\"light\");\r\n                        }}\r\n                    >\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-6 w-6\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth={2}\r\n                                d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\r\n                            />\r\n                        </svg>\r\n                        <span className=\"ml-2\">Light Mode</span>\r\n                    </button>\r\n                ) : (\r\n                    <button\r\n                        className=\"text-blue-darker flex items-center\"\r\n                        onClick={() => {\r\n                            selectTheme(\"dark\");\r\n                        }}\r\n                    >\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-6 w-6\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth={2}\r\n                                d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\r\n                            />\r\n                        </svg>\r\n                        <span className=\"ml-2\">Dark Mode</span>\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { AppsContext } from \"../App\";\r\n\r\nexport default function Card({ img, title, population, region, capital }) {\r\n    const { isDark } = useContext(AppsContext);\r\n    return (\r\n        <div\r\n            className={`rounded shadow overflow-hidden ${isDark && \"bg-blue\"}`}\r\n        >\r\n            <img src={img} className=\"w-full h-44\" alt={`${title} Flag`} />\r\n            <div className=\"px-4 pt-6 pb-10\">\r\n                <h1 className=\"font-bold text-lg mb-4\">{title}</h1>\r\n                <ul className=\"font-semibold\">\r\n                    <li>\r\n                        Population:{\" \"}\r\n                        <span className=\"font-light\">\r\n                            {new Intl.NumberFormat().format(population)}\r\n                        </span>\r\n                    </li>\r\n                    <li>\r\n                        Region: <span className=\"font-light\">{region}</span>\r\n                    </li>\r\n                    <li>\r\n                        Capital: <span className=\"font-light\">{capital}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CardSkeleton() {\r\n    return (\r\n        <div className=\"rounded shadow overflow-hidden\">\r\n            <div className=\"animate-pulse\">\r\n                <div className=\" bg-blue h-44 w-full\"></div>\r\n                <div className=\"px-4 pt-6 pb-10\">\r\n                    <div className=\"h-4 bg-blue rounded w-3/4 mb-4\"></div>\r\n                    <div className=\"h-4 bg-blue rounded mb-2\"></div>\r\n                    <div className=\"h-4 bg-blue rounded w-5/6\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppsContext } from \"../App\";\r\nimport Card from \"../components/Card\";\r\nimport CardSkeleton from \"../components/skeleton/CardSkeleton\";\r\n\r\nfunction Home() {\r\n    const { isDark } = useContext(AppsContext);\r\n    const [countryList, setCountryList] = useState(null);\r\n    const [keyword, setKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getAllData();\r\n    }, []);\r\n\r\n    const getAllData = () => {\r\n        fetch(`https://restcountries.eu/rest/v2/all`)\r\n            .then((data) => data.json())\r\n            .then((data) => setCountryList(data))\r\n            .catch((err) => alert(err));\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        setCountryList(null);\r\n        if (keyword === \"\") {\r\n            getAllData();\r\n        } else {\r\n            fetch(`https://restcountries.eu/rest/v2/name/${keyword}`)\r\n                .then((data) => data.json())\r\n                .then((data) => {\r\n                    data.status !== 404\r\n                        ? setCountryList(data)\r\n                        : setCountryList([]);\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    };\r\n\r\n    const handleFilter = (e) => {\r\n        const filter = e.target.value;\r\n        setCountryList(null);\r\n        fetch(`https://restcountries.eu/rest/v2/region/${filter}`)\r\n            .then((data) => data.json())\r\n            .then((data) => setCountryList(data))\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={`${\r\n                    isDark ? \"bg-blue-dark text-white\" : \"bg-gray-light\"\r\n                } min-h-screen`}\r\n            >\r\n                <div className=\"container pt-12\">\r\n                    <div className=\"flex flex-col md:flex-row justify-between\">\r\n                        <form onSubmit={handleSearch}>\r\n                            <div\r\n                                className={`relative ${\r\n                                    isDark\r\n                                        ? \"text-blue-dark\"\r\n                                        : \"text-gray-600 focus-within:text-gray-400\"\r\n                                }`}\r\n                            >\r\n                                <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className={`md:pl-5 pl-2 focus:outline-none focus:shadow-outline ${\r\n                                            isDark\r\n                                                ? \"text-white\"\r\n                                                : \"text-blue-dark\"\r\n                                        }`}\r\n                                    >\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            className=\"h-6 w-6\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            stroke=\"currentColor\"\r\n                                        >\r\n                                            <path\r\n                                                strokeLinecap=\"round\"\r\n                                                strokeLinejoin=\"round\"\r\n                                                strokeWidth={2}\r\n                                                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                                            />\r\n                                        </svg>\r\n                                    </button>\r\n                                </span>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className={`py-5 pl-11 md:pl-16 md:w-96 w-full rounded shadow text-sm font-light focus:outline-none ${\r\n                                        isDark && \"bg-blue text-white\"\r\n                                    }`}\r\n                                    placeholder=\"Search for a country...\"\r\n                                    onChange={(e) => setKeyword(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"mt-5 md:mt-0\">\r\n                            <select\r\n                                defaultValue=\"none\"\r\n                                onChange={handleFilter}\r\n                                className={`md:px-7 px-4 py-5 rounded shadow text-sm font-semibold focus:outline-none ${\r\n                                    isDark ? \"bg-blue text-white\" : \"bg-white\"\r\n                                }`}\r\n                            >\r\n                                <option\r\n                                    value=\"none\"\r\n                                    className=\"font-semibold\"\r\n                                    disabled\r\n                                >\r\n                                    Filter by region\r\n                                </option>\r\n                                <option\r\n                                    value=\"Africa\"\r\n                                    className=\"font-semibold\"\r\n                                >\r\n                                    Africa\r\n                                </option>\r\n                                <option\r\n                                    value=\"Americas\"\r\n                                    className=\"font-semibold\"\r\n                                >\r\n                                    America\r\n                                </option>\r\n                                <option value=\"Asia\" className=\"font-semibold\">\r\n                                    Asia\r\n                                </option>\r\n                                <option\r\n                                    value=\"Europe\"\r\n                                    className=\"font-semibold\"\r\n                                >\r\n                                    Europe\r\n                                </option>\r\n                                <option\r\n                                    value=\"Oceania\"\r\n                                    className=\"font-semibold\"\r\n                                >\r\n                                    Oceania\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-10\">\r\n                        {countryList == null ? (\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-16\">\r\n                                <CardSkeleton />\r\n                                <CardSkeleton />\r\n                                <CardSkeleton />\r\n                                <CardSkeleton />\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-16\">\r\n                                {countryList.map((el, idx) => {\r\n                                    return (\r\n                                        <Link\r\n                                            key={idx}\r\n                                            to={`/detail/${el.alpha2Code}`}\r\n                                        >\r\n                                            <Card\r\n                                                key={idx}\r\n                                                img={el.flag}\r\n                                                title={el.name}\r\n                                                population={el.population}\r\n                                                region={el.region}\r\n                                                capital={el.capital}\r\n                                            />\r\n                                        </Link>\r\n                                    );\r\n                                })}\r\n                                {countryList.length <= 0 && (\r\n                                    <div className=\"md:col-span-4 w-full text-center mt-10\">\r\n                                        <p className=\"font-semibold font-xl\">\r\n                                            Negara tidak ditemukan!\r\n                                        </p>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { AppsContext } from \"../App\";\r\nconst defaultClass = \"py-2 px-4 shadow rounded bg-white\";\r\nconst Primary = (props) => {\r\n    const { isDark } = useContext(AppsContext);\r\n    return (\r\n        <button\r\n            className={`${props?.className} ${\r\n                isDark && \"bg-blue text-white\"\r\n            } ${defaultClass}`}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport { Primary };\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { AppsContext } from \"../App\";\r\nimport * as Button from \"../components/Button\";\r\n\r\nexport default function Card() {\r\n    let { countryCode } = useParams();\r\n    const { isDark } = useContext(AppsContext);\r\n    const [country, setCountry] = useState(null);\r\n    const [borderList, setBorderList] = useState([]);\r\n\r\n    const getBorderName = (borders, idx) => {\r\n        fetch(`https://restcountries.eu/rest/v2/alpha/${borders[idx]}`)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                idx++;\r\n                if (borders.length !== idx) {\r\n                    getBorderName(borders, idx);\r\n                }\r\n                borderList.push(res.name);\r\n                setBorderList([...borderList]);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`https://restcountries.eu/rest/v2/alpha/${countryCode}`)\r\n            .then((data) => data.json())\r\n            .then((data) => {\r\n                setCountry(data);\r\n                data.borders.length > 0 && getBorderName(data.borders, 0);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            className={`min-h-screen ${\r\n                isDark ? \"bg-blue-dark text-white\" : \"bg-gray-light\"\r\n            }`}\r\n        >\r\n            <div className=\"container pb-20 pt-10\">\r\n                <Link to=\"/\">\r\n                    <Button.Primary className=\"flex\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-6 w-6 mr-3\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth={2}\r\n                                d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\r\n                            />\r\n                        </svg>\r\n                        Back\r\n                    </Button.Primary>\r\n                </Link>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10 mt-10\">\r\n                    {country !== null ? (\r\n                        <img\r\n                            src={country?.flag}\r\n                            className={`w-full ${!isDark && \"border-2\"}`}\r\n                            alt={`${country?.name} Flag`}\r\n                        />\r\n                    ) : (\r\n                        <div className=\"w-full animate-pulse bg-blue h-96\"></div>\r\n                    )}\r\n                    <div>\r\n                        {country !== null ? (\r\n                            <div>\r\n                                <h1 className=\"font-bold text-2xl mb-4\">\r\n                                    {country?.name}\r\n                                </h1>\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-10\">\r\n                                    <ul>\r\n                                        <li>\r\n                                            <strong>Native Name: </strong>\r\n                                            {country?.nativeName}\r\n                                        </li>\r\n                                        <li>\r\n                                            <strong>Population: </strong>\r\n                                            {new Intl.NumberFormat().format(\r\n                                                country?.population\r\n                                            )}\r\n                                        </li>\r\n                                        <li>\r\n                                            <strong>Region: </strong>\r\n                                            {country?.region}\r\n                                        </li>\r\n                                        <li>\r\n                                            <strong>Sub Region: </strong>\r\n                                            {country?.subregion}\r\n                                        </li>\r\n                                        <li>\r\n                                            <strong>Capital: </strong>\r\n                                            {country?.capital}\r\n                                        </li>\r\n                                    </ul>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <strong>Top Level Domain :</strong>{\" \"}\r\n                                            {country?.topLevelDomain}\r\n                                        </li>\r\n                                        <li>\r\n                                            <strong>Currencies :</strong>{\" \"}\r\n                                            {country?.currencies[0].name}\r\n                                        </li>\r\n                                        <li>\r\n                                            <strong>Languages :</strong>{\" \"}\r\n                                            {country?.languages.map(\r\n                                                (el, idx) => {\r\n                                                    if (\r\n                                                        country?.languages\r\n                                                            .length -\r\n                                                            1 !==\r\n                                                        idx\r\n                                                    ) {\r\n                                                        return `${el.name}, `;\r\n                                                    } else {\r\n                                                        return el.name;\r\n                                                    }\r\n                                                }\r\n                                            )}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"mt-20 grid grid-cols-1 md:grid-cols-6\">\r\n                                    <h6 className=\"font-bold text-base col-span-0 md:col-span-2\">\r\n                                        Border Countries:\r\n                                    </h6>\r\n                                    <div className=\"col-span-0 md:col-span-4\">\r\n                                        <div className=\"flex flex-wrap\">\r\n                                            {borderList.length > 0\r\n                                                ? borderList.map((el, idx) => {\r\n                                                      return (\r\n                                                          <div\r\n                                                              key={idx}\r\n                                                              className={`rounded shadow px-4 py-2 mr-4 mb-2 ${\r\n                                                                  isDark &&\r\n                                                                  \"bg-blue text-white\"\r\n                                                              }`}\r\n                                                          >\r\n                                                              {el}\r\n                                                          </div>\r\n                                                      );\r\n                                                  })\r\n                                                : \"N/A\"}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"animate-pulse\">\r\n                                <div className=\"h-4 bg-blue w-2/5 rounded mb-4\"></div>\r\n                                <div className=\"h-4 bg-blue w-2/3 rounded mb-1\"></div>\r\n                                <div className=\"h-4 bg-blue w-2/4 rounded mb-1\"></div>\r\n                                <div className=\"h-4 bg-blue w-2/5 rounded mb-10\"></div>\r\n                                <div className=\"h-4 bg-blue w-1/2 rounded mb-1\"></div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, createContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\n\nexport const AppsContext = createContext({});\nconst App = () => {\n    const [isDark, setIsDark] = useState(false);\n    return (\n        <Router basename=\"/Frontend-Mentor-Challange-Countries-API\">\n            <AppsContext.Provider value={{ isDark, setIsDark }}>\n                <Navbar />\n                <Switch>\n                    <Route path=\"/detail/:countryCode\">\n                        <Detail />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </AppsContext.Provider>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}